> /scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py(150)<module>()
-> for epoch in range(n_epochs):
TrainState(step=0, apply_fn=<function FunFactory.getAdaptFunctions.<locals>.forwardSolve at 0x2b4a77fc13a0>, params=FrozenDict({
    Dense_0: {
        kernel: Array([[ 0.47348937, -0.36519468,  0.90793145, -0.42087126, -1.2288125 ,
                 1.5251625 , -1.7995043 , -1.8295116 , -0.04654751, -0.1046633 ,
                 1.2314252 , -2.0979517 , -0.53243995, -0.53515923, -1.0145547 ,
                -2.1748292 , -0.89873856, -0.280785  , -0.23674253, -1.152538  ,
                 0.05030832,  0.10312149, -0.3477167 ,  0.24291165,  1.368283  ,
                 0.22692825,  0.3587321 , -0.7203148 , -0.33700493,  1.9536468 ,
                 0.30562985, -0.27877936, -0.76306045,  1.1327841 ,  0.3057678 ,
                -0.7159344 ,  1.6961393 , -0.7597311 ,  1.0473262 ,  0.7150134 ,
                -1.2322562 ,  1.2060477 ,  0.29977056, -1.5102253 , -0.34675863,
                 0.12449263,  0.44938806, -0.33855265,  0.30572832, -0.9669537 ,
                 0.33186683, -0.2539079 ,  1.5092207 , -0.18723758,  0.6922347 ,
                 0.08880661,  2.1332846 , -0.67697114, -0.5783982 , -0.03231796,
                -0.07704163,  1.6477699 , -0.8064608 , -0.95315766,  2.0052345 ,
                 0.8401539 , -1.1402342 , -2.0332353 ,  0.05994598,  1.6518918 ,
                 0.16119458,  0.5799751 ,  0.7683204 ,  0.987734  , -0.19013551,
                 0.31860363, -0.05163977, -0.6548042 ,  1.3159785 , -1.459556  ,
                -0.191815  ,  1.0316801 ,  1.9951748 , -1.8562481 , -1.5141845 ,
                -1.6288072 , -1.1643119 , -0.5417517 ,  1.1094134 , -1.6837356 ,
                -1.1497633 ,  0.4256433 ,  0.87198514, -1.9898844 ,  1.1197255 ,
                -0.17699891,  0.7024788 ,  0.01486881, -0.9533002 ,  1.9013437 ]],      dtype=float32),
        bias: Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],      dtype=float32),
    },
    Dense_1: {
        kernel: Array([[ 0.11183926,  0.09247249,  0.17542729, ...,  0.08409799,
                -0.15955812, -0.10182437],
               [ 0.13747059, -0.06359722, -0.12171771, ..., -0.00987078,
                -0.00086576, -0.08173952],
               [-0.04250905, -0.11862572,  0.129842  , ...,  0.12454056,
                -0.11702015,  0.04688262],
               ...,
               [-0.02043609, -0.03194648,  0.01956429, ..., -0.11892873,
                -0.02196713,  0.12685597],
               [ 0.09637103,  0.10354895,  0.14512096, ...,  0.1782612 ,
                -0.03833425, -0.07763318],
               [-0.10619161,  0.10254652, -0.1035678 , ..., -0.17118795,
                 0.01220344,  0.13710581]], dtype=float32),
        bias: Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],      dtype=float32),
    },
    Dense_2: {
        kernel: Array([[ 0.03499087, -0.06593298,  0.01682267, ...,  0.08546551,
                 0.19482407,  0.0395188 ],
               [ 0.05300823,  0.1776223 ,  0.14221698, ..., -0.11389964,
                 0.02144418,  0.01005348],
               [ 0.1083729 , -0.0043101 , -0.1083559 , ..., -0.09814696,
                -0.11221518, -0.05463754],
               ...,
               [-0.0865102 , -0.13741612,  0.02322741, ...,  0.17398699,
                 0.19465253, -0.04114515],
               [ 0.16033341, -0.02869311, -0.00133405, ...,  0.07296664,
                -0.03909723, -0.04145836],
               [ 0.04515844, -0.03640416, -0.05160977, ..., -0.13241144,
                 0.07939719,  0.10402873]], dtype=float32),
        bias: Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],      dtype=float32),
    },
    Dense_3: {
        kernel: Array([[ 0.00704476, -0.1486444 ,  0.03038474, ...,  0.00258886,
                -0.09342223, -0.20029673],
               [ 0.03004971, -0.05082995,  0.0025813 , ..., -0.02763254,
                -0.17059915, -0.21137698],
               [ 0.11377382, -0.00576173,  0.05295163, ..., -0.03947537,
                -0.11662914,  0.00851644],
               ...,
               [-0.19449398, -0.05655749,  0.02765915, ..., -0.05087693,
                -0.21027924, -0.14234424],
               [ 0.1775412 ,  0.02170909,  0.15239693, ...,  0.0510375 ,
                -0.06018567,  0.07631737],
               [ 0.03004834,  0.19120964,  0.05272878, ...,  0.043297  ,
                -0.10436924,  0.01891545]], dtype=float32),
        bias: Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],      dtype=float32),
    },
    Dense_4: {
        kernel: Array([[ 0.06811804,  0.06016983,  0.0025527 , ...,  0.0278899 ,
                 0.0116741 ,  0.01279461],
               [-0.06949926, -0.01282364, -0.2065348 , ..., -0.00444833,
                 0.12812093,  0.08402823],
               [-0.15545146,  0.04720698, -0.09290952, ..., -0.11329338,
                 0.02262035,  0.00783807],
               ...,
               [ 0.1856156 ,  0.06789828, -0.08507436, ...,  0.16178045,
                 0.02404239, -0.04316599],
               [-0.06758527, -0.0069353 , -0.01831518, ...,  0.10579737,
                -0.10765634, -0.05034329],
               [ 0.09665231,  0.21989167, -0.0861705 , ...,  0.11155736,
                -0.00841226, -0.08163719]], dtype=float32),
        bias: Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],      dtype=float32),
    },
    Dense_5: {
        kernel: Array([[ 0.06688942, -0.0945122 ,  0.02839689, ..., -0.0466482 ,
                -0.02650566, -0.00995143],
               [ 0.09123751,  0.00431422,  0.15649842, ...,  0.08300913,
                -0.11617325,  0.1018672 ],
               [-0.09808847,  0.17037506,  0.00029766, ...,  0.03791016,
                -0.06615208,  0.00344261],
               ...,
               [-0.10683555,  0.07441263,  0.18841283, ...,  0.14391313,
                -0.0180393 ,  0.04965298],
               [-0.09388928, -0.06659849, -0.06359218, ...,  0.05234679,
                -0.01312559, -0.02599186],
               [ 0.08861199,  0.03974093,  0.04408929, ...,  0.09238116,
                 0.06666863, -0.05914494]], dtype=float32),
        bias: Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],      dtype=float32),
    },
    Dense_6: {
        kernel: Array([[-0.02994775, -0.0525669 , -0.03702195, ...,  0.11152163,
                 0.22056617,  0.06536021],
               [-0.05675173, -0.06980251, -0.09780123, ...,  0.04285713,
                 0.05984034,  0.02245286],
               [-0.17512013, -0.1114333 , -0.10271282, ...,  0.02238139,
                -0.1836784 ,  0.0592592 ],
               ...,
               [-0.17047031, -0.01513633, -0.03062165, ...,  0.06410027,
                 0.05505473,  0.08285533],
               [-0.02945982,  0.05191116,  0.03194034, ..., -0.02402329,
                 0.11767587, -0.02244354],
               [-0.0012573 , -0.09235477, -0.02366166, ...,  0.04627681,
                 0.08268556, -0.00918746]], dtype=float32),
        bias: Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],      dtype=float32),
    },
    Dense_7: {
        kernel: Array([[ 2.96678971e-02],
               [-1.87275175e-03],
               [-9.59081054e-02],
               [ 1.24202028e-01],
               [-4.09089625e-02],
               [-6.84737088e-03],
               [ 6.06639236e-02],
               [ 1.67138189e-01],
               [ 1.25261778e-02],
               [ 1.02585748e-01],
               [-1.61315110e-02],
               [ 8.67646262e-02],
               [ 4.53596041e-02],
               [-1.00805946e-02],
               [ 1.45330444e-01],
               [-1.75864398e-02],
               [-1.33637831e-01],
               [ 5.68234697e-02],
               [-1.16299085e-01],
               [-1.82085540e-02],
               [-1.01780325e-01],
               [ 2.62673572e-02],
               [ 2.08181173e-01],
               [ 9.79341865e-02],
               [ 1.22505203e-01],
               [-2.40403973e-02],
               [ 6.31676465e-02],
               [ 3.24729942e-02],
               [ 1.98902890e-01],
               [ 7.17124566e-02],
               [-8.52347240e-02],
               [-9.14311707e-02],
               [-2.07598478e-01],
               [-1.02404296e-01],
               [-3.55657302e-02],
               [-7.01250732e-02],
               [ 1.23861119e-01],
               [ 4.82337028e-02],
               [ 7.98499361e-02],
               [ 5.11303768e-02],
               [ 1.25768855e-01],
               [-9.21467319e-02],
               [ 9.88943502e-02],
               [ 7.84139428e-03],
               [ 3.12953182e-02],
               [-1.08760275e-01],
               [ 5.30237518e-03],
               [ 8.42773467e-02],
               [-1.11295760e-01],
               [ 2.47706361e-02],
               [-5.62764630e-02],
               [-3.66455130e-02],
               [-1.46600142e-01],
               [-8.14332813e-02],
               [-3.52444076e-05],
               [ 4.58333232e-02],
               [-3.24704573e-02],
               [-1.42098084e-01],
               [ 7.65747353e-02],
               [-7.84672499e-02],
               [-5.71212405e-03],
               [ 2.78830193e-02],
               [-1.33596763e-01],
               [ 6.30323514e-02],
               [ 1.94071382e-01],
               [-1.05262175e-01],
               [ 8.88714045e-02],
               [ 1.11559797e-02],
               [-7.38888979e-02],
               [ 1.60832945e-02],
               [ 7.41136372e-02],
               [ 3.82015221e-02],
               [-1.40519708e-01],
               [ 4.99976650e-02],
               [ 7.17598796e-02],
               [ 7.19520003e-02],
               [ 1.55672133e-02],
               [ 1.08126715e-01],
               [ 8.96505415e-02],
               [ 9.97620150e-02],
               [ 5.17757460e-02],
               [ 1.08268149e-02],
               [-2.05208197e-01],
               [-1.60257872e-02],
               [ 1.84359163e-01],
               [ 1.07180595e-01],
               [ 6.61257729e-02],
               [-8.42104927e-02],
               [-1.84446096e-01],
               [ 2.03897521e-01],
               [ 9.12094563e-02],
               [ 1.23479538e-01],
               [ 7.15815872e-02],
               [ 1.55389979e-01],
               [-8.60040709e-02],
               [-1.41402155e-01],
               [ 8.04014783e-03],
               [-1.30681191e-02],
               [-1.61519442e-02],
               [ 9.84347686e-02]], dtype=float32),
        bias: Array([0.], dtype=float32),
    },
}), tx=GradientTransformation(init=<function chain.<locals>.init_fn at 0x2b4a77ee2e50>, update=<function chain.<locals>.update_fn at 0x2b4a77f57c10>), opt_state=(ScaleByAdamState(count=Array(0, dtype=int32), mu=FrozenDict({
    Dense_0: {
        bias: Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],      dtype=float32),
        kernel: Array([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0., 0.]], dtype=float32),
    },
    Dense_1: {
        bias: Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],      dtype=float32),
        kernel: Array([[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]], dtype=float32),
    },
    Dense_2: {
        bias: Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],      dtype=float32),
        kernel: Array([[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]], dtype=float32),
    },
    Dense_3: {
        bias: Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],      dtype=float32),
        kernel: Array([[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]], dtype=float32),
    },
    Dense_4: {
        bias: Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],      dtype=float32),
        kernel: Array([[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]], dtype=float32),
    },
    Dense_5: {
        bias: Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],      dtype=float32),
        kernel: Array([[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]], dtype=float32),
    },
    Dense_6: {
        bias: Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],      dtype=float32),
        kernel: Array([[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]], dtype=float32),
    },
    Dense_7: {
        bias: Array([0.], dtype=float32),
        kernel: Array([[0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.]], dtype=float32),
    },
}), nu=FrozenDict({
    Dense_0: {
        bias: Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],      dtype=float32),
        kernel: Array([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                0., 0., 0., 0.]], dtype=float32),
    },
    Dense_1: {
        bias: Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],      dtype=float32),
        kernel: Array([[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]], dtype=float32),
    },
    Dense_2: {
        bias: Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],      dtype=float32),
        kernel: Array([[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]], dtype=float32),
    },
    Dense_3: {
        bias: Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],      dtype=float32),
        kernel: Array([[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]], dtype=float32),
    },
    Dense_4: {
        bias: Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],      dtype=float32),
        kernel: Array([[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]], dtype=float32),
    },
    Dense_5: {
        bias: Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],      dtype=float32),
        kernel: Array([[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]], dtype=float32),
    },
    Dense_6: {
        bias: Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
               0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],      dtype=float32),
        kernel: Array([[0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               ...,
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.],
               [0., 0., 0., ..., 0., 0., 0.]], dtype=float32),
    },
    Dense_7: {
        bias: Array([0.], dtype=float32),
        kernel: Array([[0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.],
               [0.]], dtype=float32),
    },
})), EmptyState()), metrics=Metrics(_reduction_counter=_ReductionCounter(value=Array(1, dtype=int32)), err=Metric.from_output.<locals>.FromOutput(total=Array(0., dtype=float32), count=Array(0, dtype=int32)), loss=Metric.from_output.<locals>.FromOutput(total=Array(0., dtype=float32), count=Array(0, dtype=int32))))
> /scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py(152)<module>()
-> u0_batches = getTrainBatches(epoch, u0_train)
/work2/07169/wgl/frontera/PHO-ICES/adj-env/lib/python3.9/site-packages/jax/_src/random.py:410: FutureWarning: jax.random.shuffle is deprecated and will be removed in a future release. Use jax.random.permutation with independent=True.
  warnings.warn(msg, FutureWarning)
ValueError: indices must have an integer type
> /scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py(152)<module>()
-> u0_batches = getTrainBatches(epoch, u0_train)
Restarting /scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py with arguments:
	Main_FD_with_net.py
> /scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py(1)<module>()
-> """
> /scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py(150)<module>()
-> for epoch in range(n_epochs):
> /scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py(152)<module>()
-> u0_batches = getTrainBatches(epoch, u0_train)
ValueError: indices must have an integer type
> /scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py(152)<module>()
-> u0_batches = getTrainBatches(epoch, u0_train)
Restarting /scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py with arguments:
	Main_FD_with_net.py
> /scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py(1)<module>()
-> """
Program interrupted. (Use 'cont' to resume).
--Return--
> /work2/07169/wgl/frontera/PHO-ICES/adj-env/lib/python3.9/site-packages/jax/_src/numpy/array_methods.py(251)deferring_binary_op()->Array([0.2715...dtype=float32)
-> return binary_op(*args)
Restarting /scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py with arguments:
	Main_FD_with_net.py
> /scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py(1)<module>()
-> """
Breakpoint 1 at /scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py:150
> /scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py(150)<module>()
-> true_test, true_train = jnp.split(true_vec, [10])
> /scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py(152)<module>()
-> for epoch in range(n_epochs):
> /scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py(154)<module>()
-> u0_batches = getTrainBatches(epoch, u0_train)
> /scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py(155)<module>()
-> t_state = trainStep(t_state, dt_n, u0_batches, true_train)
Array([[ 0.26663306,  1.1739728 , -0.33986488,  0.30427042, -0.34211692,
        -0.5508092 ,  0.6190932 , -1.0872968 ,  1.0287029 , -0.56411064],
       [ 0.9195625 ,  0.7239517 ,  0.24145578, -1.7317715 , -0.32975444,
        -1.4347866 ,  0.56377906, -0.3209961 , -0.60403264, -0.8643047 ],
       [-0.03018735,  0.71390617, -0.18640687,  1.1859305 ,  0.11238445,
        -0.5440089 ,  0.4937122 ,  1.9123923 ,  0.15134303,  0.2751613 ],
       [-0.15220405, -1.243544  , -1.482044  , -0.5200523 , -0.43462804,
         1.9250277 , -1.2132823 ,  1.8109016 ,  1.479175  , -0.90193033],
       [ 0.9026457 ,  1.2927645 , -1.0969071 ,  0.33001646,  0.38160396,
         0.9946599 , -1.117967  ,  1.0954268 ,  1.2372237 ,  0.2540067 ],
       [ 1.0949793 , -1.1362201 , -1.1992288 ,  0.5225722 , -0.19059286,
         1.7068571 , -1.7201669 , -0.98056245, -1.0898358 ,  0.94023854],
       [ 0.5671116 , -0.33917484, -0.2407853 ,  0.8485822 , -0.38813028,
        -1.7941064 ,  0.01913844,  2.0417917 ,  0.47681206, -0.9002409 ],
       [ 0.68374115,  0.81390446,  1.1410125 , -0.34048226,  0.3338356 ,
        -0.6757548 , -1.5234638 , -0.21783598, -0.13201325,  0.46425474],
       [ 0.66708773,  1.5467566 ,  1.3191737 , -0.9272435 , -0.6113319 ,
        -2.0828347 ,  1.0598867 ,  1.0008974 , -0.04027202,  0.21200493]],      dtype=float32)
Array([-1.7317715 , -0.8643047 ,  0.2540067 , -1.0898358 , -0.98056245,
        1.1739728 ,  0.9195625 , -1.0969071 ,  0.5225722 , -1.0872968 ,
       -0.9272435 ,  0.46425474, -0.5200523 ,  0.7239517 , -1.8309819 ,
        0.68374115,  0.38160396, -0.6757548 , -1.2132823 ,  0.26663306,
       -0.90193033,  0.15134303,  1.0287029 ,  2.0417917 ,  1.0949793 ,
       -0.33986488,  0.2751613 ,  1.2372237 ,  0.3338356 ,  0.6190932 ,
       -0.34211692,  1.1859305 , -0.19059286, -1.482044  , -1.117967  ,
       -1.7941064 , -1.7201669 ,  0.33001646, -0.03018735, -1.1992288 ,
       -0.2407853 ,  1.479175  ,  0.47681206,  1.2927645 ,  0.8435682 ,
       -0.5440089 ,  0.8485822 , -2.0828347 , -0.34048226,  0.8001387 ,
       -1.4347866 , -0.65773505, -0.43462804,  1.8109016 ,  0.66708773,
        0.94023854, -0.3209961 , -0.60403264, -0.9002409 ,  1.0954268 ,
        0.9946599 ,  0.48522177,  0.01913844,  0.1144337 ,  0.21200493,
        1.9250277 , -0.21783598, -0.04027202, -0.13201325, -0.33917484,
        0.81390446,  0.11238445, -1.1362201 ,  0.4937122 , -0.15220405,
       -0.5508092 , -0.18640687, -0.56411064,  0.5671116 , -0.38813028,
        1.7068571 , -0.6113319 , -1.243544  ,  1.0598867 , -1.5234638 ,
        1.3191737 ,  0.56377906,  1.5467566 ,  0.71390617, -0.32975444],      dtype=float32)
ValueError: setting an array element with a sequence.
> /scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py(155)<module>()
-> t_state = trainStep(t_state, dt_n, u0_batches, true_train)
Restarting /scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py with arguments:
	Main_FD_with_net.py
> /scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py(1)<module>()
-> """
Deleted breakpoint 1 at /scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py:150
Breakpoint 2 at /scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py:97
> /scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py(97)lossFunction()
-> u = state.apply_fn(funs, dt_n, u0_batch, net, params)
ValueError: setting an array element with a sequence.
> /scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py(97)lossFunction()
-> u = state.apply_fn(funs, dt_n, u0_batch, net, params)
--Return--
> /scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py(97)lossFunction()->None
-> u = state.apply_fn(funs, dt_n, u0_batch, net, params)
--Call--
> /work2/07169/wgl/frontera/PHO-ICES/adj-env/lib/python3.9/site-packages/jax/_src/interpreters/batching.py(242)flatten_fun_for_vmap()
-> ans = yield py_args, py_kwargs
Uncaught exception. Entering post mortem debugging
Running 'cont' or 'step' will restart the program
> /scratch1/07169/wgl/adjoint/python/factory.py(564)solve()
-> u_vec[0] = u0
Traceback (most recent call last):
  File "/work2/07169/wgl/frontera/PHO-ICES/adj-env/lib/python3.9/site-packages/jax/_src/core.py", line 683, in __float__
    def __float__(self): return self.aval._float(self)
  File "/work2/07169/wgl/frontera/PHO-ICES/adj-env/lib/python3.9/site-packages/jax/_src/core.py", line 1369, in error
    raise ConcretizationTypeError(arg, fname_context)
jax._src.errors.ConcretizationTypeError: Abstract tracer value encountered where concrete value is expected: Traced<ShapedArray(float32[])>with<BatchTrace(level=5/0)> with
  val = Traced<ShapedArray(float32[10])>with<BatchTrace(level=4/0)> with
    val = Traced<ShapedArray(float32[9,10])>with<DynamicJaxprTrace(level=1/0)>
    batch_dim = 0
  batch_dim = 0
The problem arose with the `float` function. If trying to convert the data type of a value, try using `x.astype(float)` or `jnp.array(x, float)` instead.
This BatchTracer with object id 47624312001536 was created on line:
  /scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py:97 (lossFunction)
See https://jax.readthedocs.io/en/latest/errors.html#jax.errors.ConcretizationTypeError
The above exception was the direct cause of the following exception:
Traceback (most recent call last):
  File "<string>", line 1, in <module>
  File "/scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py", line 155, in <module>
    t_state = trainStep(t_state, dt_n, u0_batches, true_train)
  File "/work2/07169/wgl/frontera/PHO-ICES/adj-env/lib/python3.9/site-packages/jax/_src/traceback_util.py", line 166, in reraise_with_filtered_traceback
    return fun(*args, **kwargs)
  File "/work2/07169/wgl/frontera/PHO-ICES/adj-env/lib/python3.9/site-packages/jax/_src/pjit.py", line 238, in cache_miss
    outs, out_flat, out_tree, args_flat = _python_pjit_helper(
  File "/work2/07169/wgl/frontera/PHO-ICES/adj-env/lib/python3.9/site-packages/jax/_src/pjit.py", line 180, in _python_pjit_helper
    args_flat, _, params, in_tree, out_tree, _ = infer_params_fn(
  File "/work2/07169/wgl/frontera/PHO-ICES/adj-env/lib/python3.9/site-packages/jax/_src/api.py", line 311, in infer_params
    return pjit.common_infer_params(pjit_info_args, *args, **kwargs)
  File "/work2/07169/wgl/frontera/PHO-ICES/adj-env/lib/python3.9/site-packages/jax/_src/pjit.py", line 480, in common_infer_params
    jaxpr, consts, canonicalized_out_shardings_flat = _pjit_jaxpr(
  File "/work2/07169/wgl/frontera/PHO-ICES/adj-env/lib/python3.9/site-packages/jax/_src/pjit.py", line 918, in _pjit_jaxpr
    jaxpr, final_consts, out_type = _create_pjit_jaxpr(
  File "/work2/07169/wgl/frontera/PHO-ICES/adj-env/lib/python3.9/site-packages/jax/_src/linear_util.py", line 322, in memoized_fun
    ans = call(fun, *args)
  File "/work2/07169/wgl/frontera/PHO-ICES/adj-env/lib/python3.9/site-packages/jax/_src/pjit.py", line 874, in _create_pjit_jaxpr
    jaxpr, global_out_avals, consts = pe.trace_to_jaxpr_dynamic(
  File "/work2/07169/wgl/frontera/PHO-ICES/adj-env/lib/python3.9/site-packages/jax/_src/profiler.py", line 314, in wrapper
    return func(*args, **kwargs)
  File "/work2/07169/wgl/frontera/PHO-ICES/adj-env/lib/python3.9/site-packages/jax/_src/interpreters/partial_eval.py", line 2049, in trace_to_jaxpr_dynamic
    jaxpr, out_avals, consts = trace_to_subjaxpr_dynamic(
  File "/work2/07169/wgl/frontera/PHO-ICES/adj-env/lib/python3.9/site-packages/jax/_src/interpreters/partial_eval.py", line 2066, in trace_to_subjaxpr_dynamic
    ans = fun.call_wrapped(*in_tracers_)
  File "/work2/07169/wgl/frontera/PHO-ICES/adj-env/lib/python3.9/site-packages/jax/_src/linear_util.py", line 166, in call_wrapped
    ans = self.f(*args, **dict(self.params, **kwargs))
  File "/scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py", line 102, in trainStep
    grads = grad(loss)(state.params, u0_batches)
  File "/work2/07169/wgl/frontera/PHO-ICES/adj-env/lib/python3.9/site-packages/jax/_src/traceback_util.py", line 166, in reraise_with_filtered_traceback
    return fun(*args, **kwargs)
  File "/work2/07169/wgl/frontera/PHO-ICES/adj-env/lib/python3.9/site-packages/jax/_src/api.py", line 659, in grad_f
    _, g = value_and_grad_f(*args, **kwargs)
  File "/work2/07169/wgl/frontera/PHO-ICES/adj-env/lib/python3.9/site-packages/jax/_src/traceback_util.py", line 166, in reraise_with_filtered_traceback
    return fun(*args, **kwargs)
  File "/work2/07169/wgl/frontera/PHO-ICES/adj-env/lib/python3.9/site-packages/jax/_src/api.py", line 735, in value_and_grad_f
    ans, vjp_py = _vjp(f_partial, *dyn_args, reduce_axes=reduce_axes)
  File "/work2/07169/wgl/frontera/PHO-ICES/adj-env/lib/python3.9/site-packages/jax/_src/api.py", line 2258, in _vjp
    out_primal, out_vjp = ad.vjp(
  File "/work2/07169/wgl/frontera/PHO-ICES/adj-env/lib/python3.9/site-packages/jax/_src/interpreters/ad.py", line 139, in vjp
    out_primals, pvals, jaxpr, consts = linearize(traceable, *primals)
  File "/work2/07169/wgl/frontera/PHO-ICES/adj-env/lib/python3.9/site-packages/jax/_src/interpreters/ad.py", line 128, in linearize
    jaxpr, out_pvals, consts = pe.trace_to_jaxpr_nounits(jvpfun_flat, in_pvals)
  File "/work2/07169/wgl/frontera/PHO-ICES/adj-env/lib/python3.9/site-packages/jax/_src/profiler.py", line 314, in wrapper
    return func(*args, **kwargs)
  File "/work2/07169/wgl/frontera/PHO-ICES/adj-env/lib/python3.9/site-packages/jax/_src/interpreters/partial_eval.py", line 771, in trace_to_jaxpr_nounits
    jaxpr, (out_pvals, consts, env) = fun.call_wrapped(pvals)
  File "/work2/07169/wgl/frontera/PHO-ICES/adj-env/lib/python3.9/site-packages/jax/_src/linear_util.py", line 166, in call_wrapped
    ans = self.f(*args, **dict(self.params, **kwargs))
  File "/scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py", line 101, in <lambda>
    loss = lambda p, u: jnp.mean(vmap(lossFunction, in_axes=(None, 0))(p, u))
  File "/work2/07169/wgl/frontera/PHO-ICES/adj-env/lib/python3.9/site-packages/jax/_src/traceback_util.py", line 166, in reraise_with_filtered_traceback
    return fun(*args, **kwargs)
  File "/work2/07169/wgl/frontera/PHO-ICES/adj-env/lib/python3.9/site-packages/jax/_src/api.py", line 1253, in vmap_f
    out_flat = batching.batch(
  File "/work2/07169/wgl/frontera/PHO-ICES/adj-env/lib/python3.9/site-packages/jax/_src/linear_util.py", line 166, in call_wrapped
    ans = self.f(*args, **dict(self.params, **kwargs))
  File "/scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py", line 97, in lossFunction
    u = state.apply_fn(funs, dt_n, u0_batch, net, params)
  File "/work2/07169/wgl/frontera/PHO-ICES/adj-env/lib/python3.9/site-packages/jax/_src/traceback_util.py", line 166, in reraise_with_filtered_traceback
    return fun(*args, **kwargs)
  File "/work2/07169/wgl/frontera/PHO-ICES/adj-env/lib/python3.9/site-packages/jax/_src/api.py", line 1253, in vmap_f
    out_flat = batching.batch(
  File "/work2/07169/wgl/frontera/PHO-ICES/adj-env/lib/python3.9/site-packages/jax/_src/linear_util.py", line 166, in call_wrapped
    ans = self.f(*args, **dict(self.params, **kwargs))
  File "/scratch1/07169/wgl/adjoint/python/factory.py", line 572, in forwardSolve
    return solve(u0, net, params)
  File "/scratch1/07169/wgl/adjoint/python/factory.py", line 564, in solve
    u_vec[0] = u0
jax._src.traceback_util.UnfilteredStackTrace: ValueError: setting an array element with a sequence.
The stack trace below excludes JAX-internal frames.
The preceding is the original exception that occurred, unmodified.
--------------------
The above exception was the direct cause of the following exception:
Traceback (most recent call last):
  File "/opt/apps/intel19/python3/3.9.2/lib/python3.9/pdb.py", line 1705, in main
    pdb._runscript(mainpyfile)
  File "/opt/apps/intel19/python3/3.9.2/lib/python3.9/pdb.py", line 1573, in _runscript
    self.run(statement)
  File "/opt/apps/intel19/python3/3.9.2/lib/python3.9/bdb.py", line 580, in run
    exec(cmd, globals, locals)
  File "<string>", line 1, in <module>
  File "/scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py", line 155, in <module>
    t_state = trainStep(t_state, dt_n, u0_batches, true_train)
  File "/scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py", line 102, in trainStep
    grads = grad(loss)(state.params, u0_batches)
  File "/scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py", line 101, in <lambda>
    loss = lambda p, u: jnp.mean(vmap(lossFunction, in_axes=(None, 0))(p, u))
  File "/scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py", line 97, in lossFunction
    u = state.apply_fn(funs, dt_n, u0_batch, net, params)
  File "/scratch1/07169/wgl/adjoint/python/factory.py", line 572, in forwardSolve
    return solve(u0, net, params)
  File "/scratch1/07169/wgl/adjoint/python/factory.py", line 564, in solve
    u_vec[0] = u0
ValueError: setting an array element with a sequence.
Post mortem debugger finished. The /scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py will be restarted
> /scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py(1)<module>()
-> """
> /scratch1/07169/wgl/adjoint/python/Main_FD_with_net.py(97)lossFunction()
-> u = state.apply_fn(funs, dt_n, u0_batch, net, params)
*** ValueError: setting an array element with a sequence.
*** ValueError: setting an array element with a sequence.
*** ValueError: setting an array element with a sequence.